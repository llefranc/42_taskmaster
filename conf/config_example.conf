# 4 etats en + : NEW, UNCHANGED, UPDATE, DESTROY

# As many new line than wanted between config blocks

    #   > Whistespaces rather than '\n' or before first charac > error


# A program block starts with [xxx] and is ended by a '\n'
# Each line of a program block starts with token=arg. Arg can contains
# spaces. Some args are mandatory, other optionals.
[program_name]
# This is a comment line. It will be ignored during the
# config file parsing.
#
# cmd=[str]
# Mandatory. 
# Can be follow by anything. Can be broke in separate lines with \ character.
# If several spaces around '\', they will be removed and only one will stay. 
# len max : ?
cmd=/bin/cat ~/file
#
# numprocs=[nb]
# Mandatory.
# Positive numbers only.
# Max num ?
numprocs=1
#
# umask=XXX, where X is >= 0 && <= 7
# Possible que le premier chiffre soit autre que 0 ?
umask=246
#
# workingdir=[str]
# Mandatory. 
# Can be follow by anything. Can be broke in separate lines with \ character.
# If several spaces around '\', they will be removed and only one will stay. 
# len max : ? (1024)
workingdir=/tmp
#
# autostart=[true|false]
# Mandatory
autostart=true
#
# autorestart=[true|false|unexpected]
# Mandatory
autorestart=true
#
# startretries=[nb]
# Mandatory
# Positive numbers only.
# Max num ?
startretries=3
#
# starttime=[nb]
# Mandatory
# Positive numbers only.
# How long the program should be running before checked for normal
# start.
# Max num ?
starttime=5
#
# exitcodes=
# - [nb]
# - [nb]
# ...
# Mandatory, at least one exit value must be specified
# Specifies which return codes are normal exit. A wrong return code will make
# the program restart.
# Positive and negative numbers.
# Max/min num ?
exitcodes=
- 0
- 1
- 127
- -2
#
# stopsignal=[STR_ALL_CAPS]
# Mandatory
# One string in caps. Must be an existing signal.
stopsignal=TERM
#
# stoptime=[nb]
# Mandatory
# Positive numbers only.
# How long to wait after a grateful stop before killing the program.
# Max num ?
stoptime=4
#
# stdout=[str]
# Optional. By default logs redirected to /dev/null ?
# Can be follow by anything. (spaces ?)
# len max ? (1024 characters max)
# Ne pas checker si c'est une path valide. Si ca fail, on aura une erreur
# dans superviser.
stdout=/var/log/out.log
#
# stderr=[str] (quotes ?)
# Optional. By default logs redirected to /dev/null ?
# Can be follow by anything. (spaces ?)
# len max ? (1024 characters max)
# Ne pas checker si c'est une path valide. Si ca fail, on aura une erreur
# dans superviser.
stderr=/var/log/err.log
#
# env=
# - [VAR1=STR]
# - [var2=str] (quotes ? backshlas pour multiligne ?)
# Optional. If declared, must have at least one entry ?
env=
- VAR1=salut
- Var2="Bonjour ca va bien"
- var3=1


[program_name]
cmd="/bin/cat ~/file" >> Si espaces quotes, sinon pas obligatoire. pas de \. 4096 chars max
numprocs=1 (char)
umask=246
workingdir=/tmp (1024 len max, pas de bacslash)
autostart=true
autorestart=true
startretries=3 (char)
starttime=5 (1 hour)
exitcodes= >>> potentiellement que valeurs entre 0 et 255, a check dans supervisor
- 0
- 1
- 127
- -2 >> faux
stopsignal=TERM
stoptime=4 (char)
stdout="/var/log/out.log" (1024 len max, pas de bacslash)
stderr="/var/log/err.log" (1024 len max, pas de bacslash)
env=
- VAR1="salutsdasdas" (pas de max, pas de backshlash)
- Var2="Bonjour ca va bien"
- var3="1"